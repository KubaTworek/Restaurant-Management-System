{
  "info": {
    "_postman_id": "1e805d0c-e32e-496f-88b5-f8fae34cf912",
    "name": "Restaurant-Management-System",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "22821726"
  },
  "item": [
    {
      "name": "Prepare Data",
      "item": [
        {
          "name": "Register Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"adminId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"role\": \"ROLE_ADMIN\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"userId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"user\",\n    \"password\": \"user\",\n    \"role\": \"ROLE_USER\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Foods",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"foodsId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJSZXN0YXVyYW50Iiwic3ViIjoiSldUIFRva2VuIiwidXNlcm5hbWUiOiJhZG1pbiIsImF1dGhvcml0aWVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTY3MDk5MDgwMSwiZXhwIjoxMDAxNjcwOTkwODAxfQ.-3BdaIuq5rSWzf9zIdkR3S1ftAk9SSGY5iaX0zCYO08",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "Authorization",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Foods\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/menu",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"drinksId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Drinks\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/menu",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Chicken",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"chickenId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n     \"name\": \"Chicken\",\n     \"price\": 10.99,\n     \"menu\": \"Foods\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/menu-items",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu-items"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Steak",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"steakId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n     \"name\": \"Steak\",\n     \"price\": 15.99,\n     \"menu\": \"Foods\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/menu-items",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu-items"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Cola",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"colaId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n     \"name\": \"Cola\",\n     \"price\": 2.99,\n     \"menu\": \"Drinks\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/menu-items",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu-items"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Cook",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"cookId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"job\": \"Cook\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/employees",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Waiter",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"waiterId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"James\",\n    \"lastName\": \"Patel\",\n    \"job\": \"Waiter\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/employees",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create DeliveryMan",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"deliveryManId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"Mary\",\n    \"lastName\": \"Ann\",\n    \"job\": \"DeliveryMan\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/employees",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Onsite Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"onsiteOrderId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJSZXN0YXVyYW50Iiwic3ViIjoiSldUIFRva2VuIiwidXNlcm5hbWUiOiJ1c2VyIiwiYXV0aG9yaXRpZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE2NzA5OTA3MTEsImV4cCI6MTAwMTY3MDk5MDcxMX0.FQXWI59l0axX413c5H4F1lByE2mSK4fe4pBvvR-gYV8",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "Authorization",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"typeOfOrder\": \"On-site\",\n    \"menuItems\": [\n        {\n        \"name\": \"Chicken\",\n        \"price\": 10.99,\n        \"menu\": \"Food\"\n        },\n        {\n        \"name\": \"Cola\",\n        \"price\": 2.99,\n        \"menu\": \"Drinks\"\n        }  \n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Delivery Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"deliveryOrderId\", pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"typeOfOrder\": \"Delivery\",\n    \"menuItems\": [\n        {\n        \"name\": \"Steak\",\n        \"price\": 15.99,\n        \"menu\": \"Food\"\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Employees",
      "item": [
        {
          "name": "getEmployees",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Three employees were returned\", function() {",
                  "    pm.expect(3).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJSZXN0YXVyYW50Iiwic3ViIjoiSldUIFRva2VuIiwidXNlcm5hbWUiOiJhZG1pbiIsImF1dGhvcml0aWVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTY3MDk5MDgwMSwiZXhwIjoxMDAxNjcwOTkwODAxfQ.-3BdaIuq5rSWzf9zIdkR3S1ftAk9SSGY5iaX0zCYO08",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "Authorization",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/employees",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees"
              ]
            }
          },
          "response": []
        },
        {
          "name": "getCooks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"One cook was returned\", function() {",
                  "    pm.expect(1).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/employees/job?jobName=Cook",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees",
                "job"
              ],
              "query": [
                {
                  "key": "jobName",
                  "value": "Cook"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getWaiters",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"One waiter was returned\", function() {",
                  "    pm.expect(1).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/employees/job?jobName=Waiter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees",
                "job"
              ],
              "query": [
                {
                  "key": "jobName",
                  "value": "Waiter"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getDeliveryMen",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"One delivery man was returned\", function() {",
                  "    pm.expect(1).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/employees/job?jobName=DeliveryMan",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees",
                "job"
              ],
              "query": [
                {
                  "key": "jobName",
                  "value": "DeliveryMan"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getCookById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"cookId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"John\").to.equal(pm.response.json().firstName);",
                  "    pm.expect(\"Smith\").to.equal(pm.response.json().lastName);",
                  "    pm.expect(\"Cook\").to.equal(pm.response.json().job.name);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/employees/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{cookId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getWaiterById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"waiterId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"James\").to.equal(pm.response.json().firstName);",
                  "    pm.expect(\"Patel\").to.equal(pm.response.json().lastName);",
                  "    pm.expect(\"Waiter\").to.equal(pm.response.json().job.name);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/employees/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{waiterId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getDeliveryManById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"deliveryManId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"Mary\").to.equal(pm.response.json().firstName);",
                  "    pm.expect(\"Ann\").to.equal(pm.response.json().lastName);",
                  "    pm.expect(\"DeliveryMan\").to.equal(pm.response.json().job.name);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/employees/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{deliveryManId}}"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Menu",
      "item": [
        {
          "name": "getMenu",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Three employees were returned\", function() {",
                  "    pm.expect(2).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu"
              ]
            }
          },
          "response": []
        },
        {
          "name": "getFoodsById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"foodsId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"Foods\").to.equal(pm.response.json().name);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{foodsId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getDrinksById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"drinksId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"Drinks\").to.equal(pm.response.json().name);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{drinksId}}"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Menu Item",
      "item": [
        {
          "name": "getMenuItemsByFood",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Two menu items were returned\", function() {",
                  "    pm.expect(2).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu-items/menu/Foods",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu-items",
                "menu",
                "Foods"
              ]
            }
          },
          "response": []
        },
        {
          "name": "getMenuItemsByDrinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"One menu item were returned\", function() {",
                  "    pm.expect(1).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu-items/menu/Drinks",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu-items",
                "menu",
                "Drinks"
              ]
            }
          },
          "response": []
        },
        {
          "name": "getChickenById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"chickenId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"Chicken\").to.equal(pm.response.json().name);",
                  "    pm.expect(10.99).to.equal(pm.response.json().price);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu-items/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu-items",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{chickenId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getSteakById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"steakId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"Steak\").to.equal(pm.response.json().name);",
                  "    pm.expect(15.99).to.equal(pm.response.json().price);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu-items/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu-items",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{steakId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getColaById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"colaId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"Cola\").to.equal(pm.response.json().name);",
                  "    pm.expect(2.99).to.equal(pm.response.json().price);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu-items/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu-items",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{colaId}}"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Order",
      "item": [
        {
          "name": "getOrders",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Two orders were returned\", function() {",
                  "    pm.expect(2).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin-orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin-orders"
              ]
            }
          },
          "response": []
        },
        {
          "name": "getOnsiteOrderById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "let expectedDateOfCreated = pm.collectionVariables.get(\"date\");",
                  "let expectedTimeOfCreated = pm.collectionVariables.get(\"time\");",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"onsiteOrderId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"On-site\").to.equal(pm.response.json().typeOfOrder.type);",
                  "    pm.expect(expectedDateOfCreated).to.equal(pm.response.json().date);",
                  "    pm.expect(null).to.equal(pm.response.json().hourAway);",
                  "    pm.expect(\"Chicken\").to.equal(pm.response.json().menuItems[0].name);",
                  "    pm.expect(10.99).to.equal(pm.response.json().menuItems[0].price);",
                  "    pm.expect(\"Cola\").to.equal(pm.response.json().menuItems[1].name);",
                  "    pm.expect(2.99).to.equal(pm.response.json().menuItems[1].price);",
                  "    pm.expect(0).to.equal(pm.response.json().employees.length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"date\", formatDate(new Date()));",
                  "pm.collectionVariables.set(\"time\", formatTime(new Date()));",
                  "",
                  "function formatTime(date){",
                  "    var d = new Date(date),",
                  "        hours = '' + d.getHours(),",
                  "        mins = '' + d.getMinutes(),",
                  "        seconds = d.getSeconds();",
                  "    return hours + \":\" + mins + \":\" + seconds;",
                  "}",
                  "",
                  "function formatDate(date) {",
                  "    var d = new Date(date),",
                  "        month = '' + (d.getMonth() + 1),",
                  "        day = '' + d.getDate(),",
                  "        year = d.getFullYear();",
                  "",
                  "    if (month.length < 2) ",
                  "        month = '0' + month;",
                  "    if (day.length < 2) ",
                  "        day = '0' + day;",
                  "",
                  "    return [year, month, day].join('-');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:9090/admin-orders/:id",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "9090",
              "path": [
                "admin-orders",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{onsiteOrderId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getDeliveryOrderById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "let expectedDateOfCreated = pm.collectionVariables.get(\"date\");",
                  "let expectedTimeOfCreated = pm.collectionVariables.get(\"time\");",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"deliveryOrderId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"Delivery\").to.equal(pm.response.json().typeOfOrder.type);",
                  "    pm.expect(expectedDateOfCreated).to.equal(pm.response.json().date);",
                  "    pm.expect(null).to.equal(pm.response.json().hourAway);",
                  "    pm.expect(\"Steak\").to.equal(pm.response.json().menuItems[0].name);",
                  "    pm.expect(15.99).to.equal(pm.response.json().menuItems[0].price);",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"date\", formatDate(new Date()));",
                  "pm.collectionVariables.set(\"time\", formatTime(new Date()));",
                  "",
                  "function formatTime(date){",
                  "    var d = new Date(date),",
                  "        hours = '' + d.getHours(),",
                  "        mins = '' + d.getMinutes(),",
                  "        seconds = d.getSeconds();",
                  "    return hours + \":\" + mins + \":\" + seconds;",
                  "}",
                  "",
                  "function formatDate(date) {",
                  "    var d = new Date(date),",
                  "        month = '' + (d.getMonth() + 1),",
                  "        day = '' + d.getDate(),",
                  "        year = d.getFullYear();",
                  "",
                  "    if (month.length < 2) ",
                  "        month = '0' + month;",
                  "    if (day.length < 2) ",
                  "        day = '0' + day;",
                  "",
                  "    return [year, month, day].join('-');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:9090/admin-orders/:id",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "9090",
              "path": [
                "admin-orders",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{deliveryOrderId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getOrdersMade",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Two orders were returned\", function() {",
                  "    pm.expect(0).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:9090/admin-orders/ready",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "9090",
              "path": [
                "admin-orders",
                "ready"
              ]
            }
          },
          "response": []
        },
        {
          "name": "getOrdersUnmade",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Two orders were returned\", function() {",
                  "    pm.expect(2).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:9090/admin-orders/unready",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "9090",
              "path": [
                "admin-orders",
                "unready"
              ]
            }
          },
          "response": []
        },
        {
          "name": "getOrdersByParams",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:9090/admin-orders/find/?typeOfOrder=Delivery",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "9090",
              "path": [
                "admin-orders",
                "find",
                ""
              ],
              "query": [
                {
                  "key": "typeOfOrder",
                  "value": "Delivery"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Queue",
      "item": [
        {
          "name": "shouldReturnHourAwayNullOnsite",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Return Hour Away as a null\", () => {",
                  "    pm.expect(pm.response.json().hourAway).to.be.null;",
                  "})",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJSZXN0YXVyYW50Iiwic3ViIjoiSldUIFRva2VuIiwidXNlcm5hbWUiOiJhZG1pbiIsImF1dGhvcml0aWVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTY3MDk5MDgwMSwiZXhwIjoxMDAxNjcwOTkwODAxfQ.-3BdaIuq5rSWzf9zIdkR3S1ftAk9SSGY5iaX0zCYO08",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "Authorization",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin-orders/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin-orders",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{onsiteOrderId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "shouldReturnHourAwayNullDelivery",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Return Hour Away as a null\", () => {",
                  "    pm.expect(pm.response.json().hourAway).to.be.null;",
                  "})",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin-orders/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin-orders",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{deliveryOrderId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "shouldReturnHourAwayNotNullOnsite",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var millisecondsToWait = 7000;",
                  "setTimeout(function() {",
                  "",
                  "}, millisecondsToWait);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Return Hour Away as a string\", () => {",
                  "    pm.expect(pm.response.json().hourAway).to.be.a(\"string\");",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin-orders/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin-orders",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{onsiteOrderId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "shouldReturnHourAwayNotNullDelivery",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Return Hour Away as a string\", () => {",
                  "    pm.expect(pm.response.json().hourAway).to.be.a(\"string\");",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin-orders/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin-orders",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{deliveryOrderId}}"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "OrderUser",
      "item": [
        {
          "name": "getOrders",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"amountOfOrdersBeforeCreate\", pm.response.json().length);",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJSZXN0YXVyYW50Iiwic3ViIjoiSldUIFRva2VuIiwidXNlcm5hbWUiOiJ1c2VyIiwiYXV0aG9yaXRpZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE2NzA5OTA3MTEsImV4cCI6MTAwMTY3MDk5MDcxMX0.FQXWI59l0axX413c5H4F1lByE2mSK4fe4pBvvR-gYV8",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "Authorization",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders"
              ]
            }
          },
          "response": []
        },
        {
          "name": "getOnsiteOrderById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "let expectedDateOfCreated = pm.collectionVariables.get(\"date\");",
                  "let expectedTimeOfCreated = pm.collectionVariables.get(\"time\");",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"onsiteOrderId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"On-site\").to.equal(pm.response.json().typeOfOrder.type);",
                  "    pm.expect(expectedDateOfCreated).to.equal(pm.response.json().date);",
                  "    pm.expect(\"Chicken\").to.equal(pm.response.json().menuItems[0].name);",
                  "    pm.expect(10.99).to.equal(pm.response.json().menuItems[0].price);",
                  "    pm.expect(\"Cola\").to.equal(pm.response.json().menuItems[1].name);",
                  "    pm.expect(2.99).to.equal(pm.response.json().menuItems[1].price);",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"date\", formatDate(new Date()));",
                  "pm.collectionVariables.set(\"time\", formatTime(new Date()));",
                  "",
                  "function formatTime(date){",
                  "    var d = new Date(date),",
                  "        hours = '' + d.getHours(),",
                  "        mins = '' + d.getMinutes(),",
                  "        seconds = d.getSeconds();",
                  "    return hours + \":\" + mins + \":\" + seconds;",
                  "}",
                  "",
                  "function formatDate(date) {",
                  "    var d = new Date(date),",
                  "        month = '' + (d.getMonth() + 1),",
                  "        day = '' + d.getDate(),",
                  "        year = d.getFullYear();",
                  "",
                  "    if (month.length < 2) ",
                  "        month = '0' + month;",
                  "    if (day.length < 2) ",
                  "        day = '0' + day;",
                  "",
                  "    return [year, month, day].join('-');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:9090/orders/:id",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "9090",
              "path": [
                "orders",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{onsiteOrderId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getDeliveryOrderById",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "let expectedDateOfCreated = pm.collectionVariables.get(\"date\");",
                  "let expectedTimeOfCreated = pm.collectionVariables.get(\"time\");",
                  "",
                  "pm.test(\"Body of Response is OK\", function() {",
                  "    pm.expect(pm.collectionVariables.get(\"deliveryOrderId\")).to.equal(pm.response.json().id);",
                  "    pm.expect(\"Delivery\").to.equal(pm.response.json().typeOfOrder.type);",
                  "    pm.expect(expectedDateOfCreated).to.equal(pm.response.json().date);",
                  "    pm.expect(\"Steak\").to.equal(pm.response.json().menuItems[0].name);",
                  "    pm.expect(15.99).to.equal(pm.response.json().menuItems[0].price);",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"date\", formatDate(new Date()));",
                  "pm.collectionVariables.set(\"time\", formatTime(new Date()));",
                  "",
                  "function formatTime(date){",
                  "    var d = new Date(date),",
                  "        hours = '' + d.getHours(),",
                  "        mins = '' + d.getMinutes(),",
                  "        seconds = d.getSeconds();",
                  "    return hours + \":\" + mins + \":\" + seconds;",
                  "}",
                  "",
                  "function formatDate(date) {",
                  "    var d = new Date(date),",
                  "        month = '' + (d.getMonth() + 1),",
                  "        day = '' + d.getDate(),",
                  "        year = d.getFullYear();",
                  "",
                  "    if (month.length < 2) ",
                  "        month = '0' + month;",
                  "    if (day.length < 2) ",
                  "        day = '0' + day;",
                  "",
                  "    return [year, month, day].join('-');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:9090/orders/:id",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "9090",
              "path": [
                "orders",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{deliveryOrderId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "getOrdersMade",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Two orders were returned\", function() {",
                  "    pm.expect(2).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:9090/orders/ready",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "9090",
              "path": [
                "orders",
                "ready"
              ]
            }
          },
          "response": []
        },
        {
          "name": "getOrdersUnmade",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Zero orders were returned\", function() {",
                  "    pm.expect(0).to.equal(pm.response.json().length);",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:9090/orders/unready",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "9090",
              "path": [
                "orders",
                "unready"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Delete Data",
      "item": [
        {
          "name": "Delete User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJSZXN0YXVyYW50Iiwic3ViIjoiSldUIFRva2VuIiwidXNlcm5hbWUiOiJhZG1pbiIsImF1dGhvcml0aWVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTY3MDk5MDgwMSwiZXhwIjoxMDAxNjcwOTkwODAxfQ.-3BdaIuq5rSWzf9zIdkR3S1ftAk9SSGY5iaX0zCYO08",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "Authorization",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/user",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "user"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/admin",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "admin"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Foods",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu/{{foodsId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu",
                "{{foodsId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu/{{drinksId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu",
                "{{drinksId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Cook",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/employees/{{cookId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees",
                "{{cookId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Waiter",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/employees/{{waiterId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees",
                "{{waiterId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete DeliveryMan",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/employees/{{deliveryManId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "employees",
                "{{deliveryManId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Onsite Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 404\", function() {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin-orders/{{onsiteOrderId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin-orders",
                "{{onsiteOrderId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Delivery Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 404\", function() {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin-orders/{{deliveryOrderId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin-orders",
                "{{deliveryOrderId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Chicken",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 404\", function() {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu_items/{{chickenId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu_items",
                "{{chickenId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Steak",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 404\", function() {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu_items/{{steakId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu_items",
                "{{steakId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Cola",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status Code is 404\", function() {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/menu_items/{{colaId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "menu_items",
                "{{colaId}}"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "employeeId",
      "value": ""
    },
    {
      "key": "menuId",
      "value": ""
    },
    {
      "key": "menuItemId",
      "value": ""
    },
    {
      "key": "orderId",
      "value": ""
    },
    {
      "key": "orderDeliveryId",
      "value": ""
    },
    {
      "key": "orderOnsiteOneId",
      "value": ""
    },
    {
      "key": "orderOnsiteTwoId",
      "value": ""
    },
    {
      "key": "orderOnsiteId",
      "value": ""
    },
    {
      "key": "baseUrl",
      "value": "http://localhost:9090"
    },
    {
      "key": "amountOfEmployees",
      "value": ""
    },
    {
      "key": "amountOfEmployeesBeforeCreate",
      "value": ""
    },
    {
      "key": "amountOfEmployeesAfterCreate",
      "value": ""
    },
    {
      "key": "amountOfCooksBeforeCreate",
      "value": ""
    },
    {
      "key": "amountOfCooksAfterCreate",
      "value": ""
    },
    {
      "key": "amountOfWaiters",
      "value": ""
    },
    {
      "key": "cookId",
      "value": ""
    },
    {
      "key": "deliveryId",
      "value": ""
    },
    {
      "key": "waiterId",
      "value": ""
    },
    {
      "key": "amountOfMenuBeforeCreate",
      "value": ""
    },
    {
      "key": "amountOfMenuAfterCreate",
      "value": ""
    },
    {
      "key": "date",
      "value": ""
    },
    {
      "key": "amountOfOrdersBeforeCreate",
      "value": ""
    },
    {
      "key": "amountOfOrdersAfterCreate",
      "value": ""
    },
    {
      "key": "time",
      "value": ""
    },
    {
      "key": "amountOfOrders",
      "value": ""
    },
    {
      "key": "adminId",
      "value": ""
    },
    {
      "key": "userId",
      "value": ""
    },
    {
      "key": "foodsId",
      "value": ""
    },
    {
      "key": "drinksId",
      "value": ""
    },
    {
      "key": "chickenId",
      "value": ""
    },
    {
      "key": "steakId",
      "value": ""
    },
    {
      "key": "colaId",
      "value": ""
    },
    {
      "key": "deliveryManId",
      "value": ""
    },
    {
      "key": "onsiteOrderId",
      "value": ""
    },
    {
      "key": "deliveryOrderId",
      "value": ""
    }
  ]
}